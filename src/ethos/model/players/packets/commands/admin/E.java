package ethos.model.players.packets.commands.admin;

import ethos.Server;
import ethos.clip.Region;
import ethos.model.players.Player;
import ethos.model.players.packets.commands.Command;
import ethos.model.players.packets.commands.owner.Object;
import ethos.runehub.RunehubUtils;
import ethos.runehub.entity.merchant.MerchantCache;
import ethos.runehub.skill.gathering.woodcutting.action.ActiveWoodcuttingSkillAction;
import ethos.runehub.skill.support.sailing.Sailing;
import ethos.runehub.skill.support.sailing.ship.Ship;
import ethos.runehub.ui.impl.ItemUpgradeUI;
import ethos.runehub.ui.impl.PlayPassHiscoreUI;
import ethos.runehub.world.WorldController;
import ethos.world.objects.GlobalObject;
import ethos.world.objects.GlobalObjects;
import org.runehub.api.model.world.region.location.Location;
import org.runehub.api.util.math.geometry.Point;
import org.runehub.api.util.math.geometry.impl.Rectangle;

import java.util.LinkedList;
import java.util.List;
import java.util.Queue;
import java.util.stream.Collectors;

/**
 * Force the player to perform a given emote.
 *
 * @author Emiel
 * <p>
 * And log if args extend to 2.
 * @author Matt
 */
public class E extends Command {

//    private void doFullFarm(Player c) {
//        FarmingConfig allotmentNorthConfig = null;
//        FarmingConfig allotmentSouthConfig = null;
//
//        Allotment nAllotment = Allotment.WATERMELON;
//        Allotment sAllotment = Allotment.SWEETCORN;
//        Flower flower = Flower.LIMPWURT;
//        Herb herb = Herb.TOADFLAX;
//
//        allotmentNorthConfig = new FarmingConfig(
//                2,
//                0,
//                false,
//                false,
//                nAllotment.ordinal(),
//
//        );
//        allotmentNorthConfig = new FarmingConfig(
//                nAllotment.getStartIndex(),
//                2,
//                0,
//                true,
//                false,
//                0,
//                nAllotment.ordinal()
//        );
//        allotmentSouthConfig = new FarmingConfig(
//                sAllotment.getStartIndex(),
//                5,
//                8,
//                false,
//                false,
//                0,
//                sAllotment.ordinal()
//        );
//
//        FarmingConfig flowerConfig = new FarmingConfig(
//                flower.getStartIndex(),
//                1,
//                16,
//                true,
//                true,
//                1,
//                flower.ordinal()
//        );
//
//        FarmingConfig herbConfig = new FarmingConfig(
//                herb.getStartIndex(),
//                1,
//                24,
//                false,
//                false,
//                2,
//                herb.ordinal()
//        );
//
//
//        System.out.println(nAllotment + " child[" + Allotment.getChild(nAllotment.getStartIndex()) + "]");
//        System.out.println(sAllotment + " child[" + Allotment.getChild(sAllotment.getStartIndex()) + "]");
//        System.out.println(flower + " child[" + Flower.getChild(flower.getStartIndex()) + "]");
//        System.out.println(herb + " child[" + Herb.getChild(herb.getStartIndex()) + "]");
//        c.getContext().getPlayerSaveData().getFarmingConfig().put(10548, List.of(allotmentNorthConfig,allotmentSouthConfig,flowerConfig,herbConfig));
//        c.getPA().sendConfig(529, allotmentNorthConfig.getVarbit() + allotmentSouthConfig.getVarbit() + flowerConfig.getVarbit() + herbConfig.getVarbit());
//    }


//    private void doCustomFullFarm(String[] args, Player c) {
//        FarmingConfig allotmentNorthConfig = null;
//        FarmingConfig allotmentSouthConfig = null;
//
//
//        allotmentNorthConfig = new FarmingConfig(
//                Allotment.valueOf(args[0].toUpperCase()).getStartIndex(),
//                Integer.parseInt(args[1]),
//                Integer.parseInt(args[4]),
//                Integer.parseInt(args[2]) != 0,
//                Integer.parseInt(args[3]) != 0
//        );
//        allotmentSouthConfig = new FarmingConfig(
//                Allotment.valueOf(args[5].toUpperCase()).getStartIndex(),
//                Integer.parseInt(args[6]),
//                Integer.parseInt(args[9]),
//                Integer.parseInt(args[7]) != 0,
//                Integer.parseInt(args[8]) != 0
//        );
//        c.getPA().sendConfig(529, (allotmentNorthConfig == null ? 0 : allotmentNorthConfig.getVarbit()) + (allotmentSouthConfig == null ? 0 : allotmentSouthConfig.getVarbit()));
//    }

//    private int getBestBar(Player player) {
//        Arrays.stream(player.playerItems).filter(itemId -> Arrays.stream(SmithingUI.BARS).anyMatch(barId -> barId == itemId))
//                .
//    }


    int[] anims = {

    };

    @Override
    public void execute(Player c, String input) {
        String[] args = input.split(" ");
//        int pos = Integer.parseInt(args[0]);
//        c.getPA().createObjectHints(3125,3241,0,pos);

        Point location = new Point(c.absX,c.absY);
        Rectangle rectangle = new Rectangle(
                new Point(location.getX() - 10, location.getY() - 10),
        new Point(location.getX() + 10, location.getY() + 10));



        int nodeId = Integer.parseInt(args[0]);
//        int x = Integer.parseInt(args[1]);
//        int y = Integer.parseInt(args[2]);
        System.out.println(Region.objectExists(RunehubUtils.getRegionId(3118,3215),1278,3118,3215,c.height));

//        for (Point point: rectangle.getAllPoints()) {
//            System.out.println("Checking point " + point);
//            if (Region.objectExists(RunehubUtils.getRegionId(point.getX(),point.getY()),nodeId,point.getX(),point.getY(),c.height)) {
//                System.out.println("Object exists at " + point);
//            }
//        }
        List<Point> points = rectangle.getAllPoints().stream().filter(point -> Server.getGlobalObjects().exists(nodeId,point.getX(),point.getY()) ||
                        Region.objectExists(RunehubUtils.getRegionId(point.getX(),point.getY()),nodeId,point.getX(),point.getY(),0))
                .collect(Collectors.toList());
        Queue<Point> pointQueue = new LinkedList<>(points);



//        c.getSkillController().getWoodcutting().train(new ActiveWoodcuttingSkillAction(c,8,nodeId,x,y,0));
    }
}
